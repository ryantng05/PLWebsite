version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pl_predictor_db
    environment:
      POSTGRES_DB: pl_predictor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./pl_predictor_backend
      dockerfile: Dockerfile
    container_name: pl_predictor_backend
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/pl_predictor
    ports:
      - "8000:8000"
    volumes:
      - ./pl_predictor_backend:/app
      - ./matches.csv:/app/matches.csv
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py import_csv_data matches.csv &&
             python manage.py runserver 0.0.0.0:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./pl_predictor_frontend
      dockerfile: Dockerfile
    container_name: pl_predictor_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api
    ports:
      - "3000:3000"
    volumes:
      - ./pl_predictor_frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pl_predictor_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:


